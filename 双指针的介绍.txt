# 一、双指针

常见的双指针有两种形式，一种是**对撞指针**，一种是**快慢指针。**

**对撞指针：**一般用于顺序结构中，也称左右指针。

1. 对撞指针从两端向中间移动。一个指针从最左端开始，另一个从最右端开始，然后逐渐往中间逼近。
2. 对撞指针的终止条件一般是两个指针相遇或者错开（也可能在循环内部找到结果直接跳出循环），也就是：

3. left == right （两个指针指向同一个位置）
4. left > right （两个指针错开）

**快慢指针**：又称龟兔赛跑赛跑算法，其基本思想就是使用两个移动速度不同的指针在数组或链表等序列结构上移动

这种方法对于处理环形链表或数组非常有用。

其实不单单是环形链表或者是数组，如果我们要研究的**问题出现循环往复**的情况，均可考虑使用快慢指针的思想。

快慢指针的实现方式有很多种，最常用的一种就是：

·在一次循环中，每次让慢的指针向移动一位，而快的指针往后移动两位，实现一快一慢。

双指针形式不一定是指针，比如在移动零中，这里的指针是下标；在解决环形链表中，那是一个真正的链表指针；在快乐数中，这里的双指针，表示当前数，和下一个操作数。所以说，双指针的形式不局限于指针

## 
